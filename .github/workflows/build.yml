on:
  - push

jobs:
  build:
    if: ${{ endsWith(github.event.commits[0].message, '[release]')  }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          version: 16
      - name: Build
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          npm install
          node --unhandled-rejections=strict --trace-uncaught --trace-warnings build.js
      - run: ls -R .
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform }}
          path: |
            bin/*
  release:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Download Artifacts
        uses: actions/download-artifact@v2
        with:
          path: bin/
      - run: ls -R .
      - name: Get Release Name
        run: echo "::set-output name=VER::v$(node -p "require('./package.json').version")"
        id: VER
      - name: Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/**/*
          tag: ${{ steps.VER.outputs.VER }}
          overwrite: true
          file_glob: true
          body: ''
